var e=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r),Object.defineProperty(e,i,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),t=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(r){if(r&&r.__esModule)return r;var i={};if(null!=r)for(var c in r)"default"!==c&&Object.prototype.hasOwnProperty.call(r,c)&&e(i,r,c);return t(i,r),i},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const c=i(require("../settings")),a=i(require("path")),s=i(require("../utils")),n=r(require("fs"));exports.default=class{constructor(){this._load()}_ensureCache(){try{return this._cacheLoc=a.default.join(c.default.getConfigDirectory(),".jira-cli-cache.json"),s.default.isFileExists(this._cacheLoc)||n.writeFileSync(this._cacheLoc,"{}","utf-8"),this._cacheLoc}catch(e){console.error("error",e)}}_load(){this._ensureCache(),this._data=this._readCache()}_readCache(){if(null!==this._data&&void 0!==this._data)return this._data;const e=n.readFileSync(this._cacheLoc);return JSON.parse(e.toString("utf-8"))}async get(){try{return this._readCache()}catch(e){console.error("error while fetching cache",e)}}async set(e){const t=await this._readCache();return Object.assign(t,e),await n.promises.writeFile(this._cacheLoc,JSON.stringify(t),{encoding:"utf-8"}),t}};